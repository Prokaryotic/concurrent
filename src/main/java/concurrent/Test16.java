package concurrent;

/**
 * 不要以字符串常亮作为锁定对象
 * 在下面例子中，m1和m2其实锁定的是同一个对象
 * 这种情况还会发生比较诡异的现象，比如你用到了一个类库，在该类库中代码锁定了字符串"HELLO"
 * 但是你读不到源码 ，所以你在自己的代码中也锁定了“HELLO” 这时候可能发生非常诡异的死锁阻塞。
 * 因为不经意间你的程序和用到的类库不经意间使用了同一把锁
 *
 *
 * 这是因为字符串常量 有一个常量池 这个常量池对整个在 这一个虚拟机上的程序代码 都是 公共的
 *
 * 所以你在不经意间其实使用了这个常量池里面的常量作为锁，类库也是使用了这个常量作为锁，导致了这个问题
 *
 * @author lijunxue
 * @create 2018-04-16 22:49
 **/
public class Test16 {

    String s1 = "HELLO";
    String s2 = "HELLO";

    void m1(){
        synchronized (s1){

        }
    }

    void m2(){
        synchronized (s2){

        }
    }
}
